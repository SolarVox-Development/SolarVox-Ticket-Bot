name: Discord Embed Notification

on:
  push:
    branches:
      - main  # You can change or remove to log all branches
  pull_request:
  issues:
  fork:
  release:
    types: [published]

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Get commit message if it's a push event, sanitized to prevent env errors
      - name: Set commit message (only for push)
        if: github.event_name == 'push'
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B | tr '\n' ' ' | tr -d '\r')
          echo "GITHUB_COMMIT_MESSAGE=$COMMIT_MSG" >> $GITHUB_ENV

      # Build the Discord embed JSON dynamically based on the event
      - name: Prepare Discord Embed
        run: |
          mkdir -p temp

          EVENT_NAME="${{ github.event_name }}"

          if [ "$EVENT_NAME" = "push" ]; then
            TITLE="🚀 Push to $GITHUB_REPOSITORY"
            DESCRIPTION="**Branch:** $GITHUB_REF_NAME\n**Pusher:** $GITHUB_ACTOR\n**Commit:** [${GITHUB_SHA}](https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA})\n**Message:** ${GITHUB_COMMIT_MESSAGE}"
          elif [ "$EVENT_NAME" = "pull_request" ]; then
            TITLE="🔃 Pull Request in $GITHUB_REPOSITORY"
            DESCRIPTION="**PR:** #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}\n**Author:** ${{ github.event.pull_request.user.login }}\n[View PR](${{ github.event.pull_request.html_url }})"
          elif [ "$EVENT_NAME" = "issues" ]; then
            TITLE="🐛 Issue in $GITHUB_REPOSITORY"
            DESCRIPTION="**Issue:** #${{ github.event.issue.number }} - ${{ github.event.issue.title }}\n**Author:** ${{ github.event.issue.user.login }}\n[View Issue](${{ github.event.issue.html_url }})"
          elif [ "$EVENT_NAME" = "fork" ]; then
            TITLE="🍴 Forked Repository"
            DESCRIPTION="**User:** $GITHUB_ACTOR forked [$GITHUB_REPOSITORY](${{ github.event.forkee.html_url }})"
          elif [ "$EVENT_NAME" = "release" ]; then
            TITLE="🏷️ New Release in $GITHUB_REPOSITORY"
            DESCRIPTION="**Release:** ${{ github.event.release.name }}\n[View Release](${{ github.event.release.html_url }})"
          else
            TITLE="❔ Unknown Event"
            DESCRIPTION="An unrecognized event occurred in $GITHUB_REPOSITORY."
          fi

          echo "{
            \"embeds\": [
              {
                \"title\": \"$TITLE\",
                \"description\": \"$DESCRIPTION\",
                \"color\": 3447003,
                \"timestamp\": \"$(date --utc +%Y-%m-%dT%H:%M:%SZ)\"
              }
            ]
          }" > temp/embed.json

      # Send to Discord webhook
      - name: Send Discord Embed
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: --file temp/embed.json
